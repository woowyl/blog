{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/concise/source/css/app.less","path":"css/app.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/archive.less","path":"css/archive.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/article.less","path":"css/article.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/aside.less","path":"css/aside.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/category.less","path":"css/category.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/comments.less","path":"css/comments.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/footer.less","path":"css/footer.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/icons.less","path":"css/icons.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/aside.css","path":"css/aside.css","modified":0,"renderable":1},{"_id":"themes/concise/source/css/markdown.css","path":"css/markdown.css","modified":0,"renderable":1},{"_id":"themes/concise/source/css/markdown.less","path":"css/markdown.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/monokai-sublime.less","path":"css/monokai-sublime.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/mixin.less","path":"css/mixin.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/nav.less","path":"css/nav.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/page.less","path":"css/page.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/reset.less","path":"css/reset.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/tags.less","path":"css/tags.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/widget.less","path":"css/widget.less","modified":0,"renderable":1},{"_id":"themes/concise/source/css/vars.less","path":"css/vars.less","modified":0,"renderable":1},{"_id":"themes/concise/source/fonts/icomoon.ttf","path":"fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/concise/source/js/scrollspy.min.js","path":"js/scrollspy.min.js","modified":0,"renderable":1},{"_id":"themes/concise/source/fonts/icomoon.eot","path":"fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/concise/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/concise/source/fonts/icomoon.svg","path":"fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/concise/source/fonts/icomoon.woff","path":"fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/concise/source/svg/github.svg","path":"svg/github.svg","modified":0,"renderable":1},{"_id":"themes/concise/source/svg/twitter.svg","path":"svg/twitter.svg","modified":0,"renderable":1},{"_id":"themes/concise/source/svg/more.svg","path":"svg/more.svg","modified":0,"renderable":1},{"_id":"themes/concise/source/svg/weibo.svg","path":"svg/weibo.svg","modified":0,"renderable":1},{"_id":"themes/concise/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"330eb9aa056345f9fa921250b104af352fe4b7d5","modified":1587004099838},{"_id":"themes/concise/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1587004099839},{"_id":"themes/concise/README.md","hash":"b03c8fd76a7391d2d570e6a4b5b74f86b941658a","modified":1587004099840},{"_id":"source/.DS_Store","hash":"b48c4f7d61a5928be717d4bd654481ff1eab36ee","modified":1587022187586},{"_id":"themes/concise/_config.yml","hash":"e1b1b626efdfc6dcefa229d0d1c3a42e4be72e5c","modified":1587719809638},{"_id":"themes/concise/_config.example.yml","hash":"e76ce037a58e93924e42cbd2e8e68bbe14f2e345","modified":1587004099840},{"_id":"source/_posts/.DS_Store","hash":"ab106028f4c4f9cf59b98c4bcf645ddee45c04ba","modified":1587092430678},{"_id":"source/_posts/charset.md","hash":"1684291bb66608e6ddaa7c4f64c9254dcbbd9d00","modified":1587719304706},{"_id":"source/_posts/hello-world.md","hash":"826e8d74052800ea7bcb2f13bc202d94b6e296c7","modified":1587719244876},{"_id":"source/_posts/2020-04-16-bit.md","hash":"03435d8a0bd23421b9b1f0c038826b0d9ce53860","modified":1587716655836},{"_id":"source/_posts/program_language.md","hash":"7da25eb1023f4935fac00f319df9d2c6d0ecceba","modified":1587718213788},{"_id":"source/about/index.md","hash":"be19da9b9b7f860ceb19fba7df4909d0db1fd878","modified":1587004099839},{"_id":"source/tags/index.md","hash":"138d1dc7ba8f3ee36ffa6cec3d2500f86830670e","modified":1587004099839},{"_id":"themes/concise/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1587004099841},{"_id":"themes/concise/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1587004099841},{"_id":"themes/concise/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1587004099841},{"_id":"themes/concise/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1587004099842},{"_id":"themes/concise/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1587004099842},{"_id":"themes/concise/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1587004099842},{"_id":"themes/concise/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1587004099842},{"_id":"themes/concise/layout/archive.ejs","hash":"20a4f9193abdaf8b3ee0e7191f055d075d91e87c","modified":1587004099845},{"_id":"themes/concise/layout/category.ejs","hash":"e29542322fe798281a40eed476468aa8afba7d50","modified":1587004099845},{"_id":"themes/concise/layout/categories.ejs","hash":"1a302302df07dcb13b92992580c2661de5d3baf0","modified":1587004099845},{"_id":"themes/concise/layout/index.ejs","hash":"e29542322fe798281a40eed476468aa8afba7d50","modified":1587004099846},{"_id":"themes/concise/layout/layout.ejs","hash":"d559ed7f6ee8dcaf0eb2230a64cfb1c62820990d","modified":1587004099846},{"_id":"themes/concise/layout/post.ejs","hash":"d948161b862e2e2956f4e940ff3668cdebf1e1b2","modified":1587004099846},{"_id":"themes/concise/layout/page.ejs","hash":"576ae239f3aa9cda0aede19e9a7ff13e92fed13c","modified":1587004099846},{"_id":"themes/concise/layout/tag.ejs","hash":"0ef29619219277632a221155e51a85673011e248","modified":1587004099847},{"_id":"themes/concise/scripts/include.js","hash":"3fd0947904a06209d1f58e97efe77d06abbabcb5","modified":1587004099849},{"_id":"themes/concise/layout/tags.ejs","hash":"8b3a6ad1d789addeb628ad7a7d5ffc8a4b764bb3","modified":1587004099847},{"_id":"source/_posts/2020-04-16-bit/.DS_Store","hash":"5755c2d6391dc7ce31d374ae36c67ea24f2f8384","modified":1587029789293},{"_id":"themes/concise/layout/_partial/archive.ejs","hash":"67891e427712e39d73058f3001eabd8758dd0bbf","modified":1587004099843},{"_id":"themes/concise/layout/_partial/article.ejs","hash":"40cff2943bda22e0ad6ffc5b4a24917d1a797bea","modified":1587004099843},{"_id":"themes/concise/layout/_partial/articles.ejs","hash":"3ca4869df35f85c39997a99ea32b3366e02de34a","modified":1587004099843},{"_id":"themes/concise/layout/_partial/aside.ejs","hash":"4131ae3397adc56859798339790a5dccbb262298","modified":1587720336470},{"_id":"themes/concise/layout/_partial/footer.ejs","hash":"448dba8ce42c6446a28a93c197e49b1d4fee357f","modified":1587004099844},{"_id":"themes/concise/layout/_partial/header.ejs","hash":"740d7291b058f99626f6fca568a1b92c092079f2","modified":1587004099844},{"_id":"themes/concise/layout/_partial/comments.ejs","hash":"1585a780494dafed3718574d985cbb4aea315aaf","modified":1587004099844},{"_id":"themes/concise/layout/_partial/nav.ejs","hash":"c87ed02859a3e826dfc990af7e9a0564958a2c1c","modified":1587004099844},{"_id":"themes/concise/source/css/app.less","hash":"a8bfa3a9e5e74d39432226adcf433da07a4e60f9","modified":1587004099849},{"_id":"themes/concise/source/css/archive.less","hash":"076c2ac3988547fd857544aff3f60e544961d2dd","modified":1587004099850},{"_id":"themes/concise/source/css/article.less","hash":"3ed8ddf7df23032e901e86c4435c59504f476161","modified":1587004099850},{"_id":"themes/concise/source/css/aside.less","hash":"4a35b2441e82bbe4a83e8527e9ba4f97217f4081","modified":1587720529437},{"_id":"themes/concise/source/css/category.less","hash":"30fbaf3cc326b6d1068e3fb4f5ece7c97de6b00c","modified":1587004099851},{"_id":"themes/concise/source/css/comments.less","hash":"1f9e8a30adaaf373d714394988036ec88707a6cd","modified":1587004099851},{"_id":"themes/concise/source/css/footer.less","hash":"4c28c726f272590bc681a404fb54ca9e5ca0145e","modified":1587004099851},{"_id":"themes/concise/source/css/icons.less","hash":"f055a61fa6971272efc7ecea708f229d99a2cf58","modified":1587004099851},{"_id":"themes/concise/source/css/aside.css","hash":"c44cab3a442add8ccc8e6cbccf8e0c8663236a2f","modified":1587720529483},{"_id":"themes/concise/source/css/markdown.css","hash":"219c9ccf061a7585fa53320dbdd2017cd196b179","modified":1587718944799},{"_id":"themes/concise/source/css/markdown.less","hash":"287ebdf5d968b0e7730d2a6ac72b87130d4d5e9b","modified":1587718944777},{"_id":"themes/concise/source/css/monokai-sublime.less","hash":"e655d22dbb9f09179d306c5840b7ffaac69dd41e","modified":1587004099854},{"_id":"themes/concise/source/css/mixin.less","hash":"96f224ac301293c97dd313da67ca727c8ff17837","modified":1587004099853},{"_id":"themes/concise/source/css/nav.less","hash":"c237fbc4dedf5a385d020a8d785549b28f69afde","modified":1587004099854},{"_id":"themes/concise/source/css/page.less","hash":"2c10c522627d8a486ab8a7ad91614a5a3a2b0c66","modified":1587004099854},{"_id":"themes/concise/source/css/reset.less","hash":"b72f89888fce30fb24ecd61c82827eff5c4d970e","modified":1587004099854},{"_id":"themes/concise/source/css/style.less","hash":"1cb267913e61225328507e9bf4a4645e6060d866","modified":1587004099855},{"_id":"themes/concise/source/css/tags.less","hash":"9e32cc862df2baec3aeec85a325ec0ba6d8a81b4","modified":1587004099855},{"_id":"themes/concise/source/css/widget.less","hash":"8373c2246dfb0261278003f1985a53707494e0b9","modified":1587004099855},{"_id":"themes/concise/source/css/vars.less","hash":"33875f71421caf72d8a86a7dbc011fb64eb7e475","modified":1587004099855},{"_id":"themes/concise/source/fonts/icomoon.ttf","hash":"6b577c657ccb5de7c321e51942a52922a4e95ec1","modified":1587004099856},{"_id":"themes/concise/source/js/scrollspy.min.js","hash":"076f7db44c3a05147144f736cae159baf1612f72","modified":1587004099858},{"_id":"themes/concise/source/fonts/icomoon.eot","hash":"8300564edcd12262c6b8b97ba225bc00b72f5984","modified":1587004099855},{"_id":"themes/concise/source/images/favicon.ico","hash":"491d07d9a67349261e4daccd4d2c18a9ebcd71c3","modified":1587699855660},{"_id":"themes/concise/source/fonts/icomoon.svg","hash":"53a7893b9b630440f7381b156d3b7c9566c47523","modified":1587004099856},{"_id":"themes/concise/source/fonts/icomoon.woff","hash":"5a3b86fa1122f78d9b285fbd390bf142721c51ed","modified":1587004099857},{"_id":"themes/concise/source/svg/github.svg","hash":"f2355900fe0ec5ed2f4e6d4cb271bda5feb90f06","modified":1587004099858},{"_id":"themes/concise/source/svg/twitter.svg","hash":"05ad5df10a4495e85ae417e241186e5205af930d","modified":1587004099859},{"_id":"themes/concise/source/svg/more.svg","hash":"d4aa97cd29baaaac750a60ce6e7b6b00fc573101","modified":1587004099858},{"_id":"themes/concise/source/svg/weibo.svg","hash":"af69ed38f353ebcf22a059cf6cf029dcfc2aee1a","modified":1587004099859},{"_id":"source/_posts/2020-04-16-bit/bbjy.png","hash":"dd27ca8212b3d6be79015740ba7f98c47a2b5d33","modified":1587022194254},{"_id":"themes/concise/source/images/avatar.jpg","hash":"ec460a2d789b9bba4db99a359b483dc899ad5790","modified":1587004099857},{"_id":"themes/concise/layout/_partial/post/date.ejs","hash":"b3bae800ec3a8bcf7e419fbb6d50f8db4b76118a","modified":1587004099844},{"_id":"themes/concise/layout/_partial/post/tags.ejs","hash":"24abef606b55a9dda97dca79bb8ab46968919423","modified":1587004099845},{"_id":"source/_posts/2020-04-16-bit/deal.jpeg","hash":"e10374b3db0ec69c03c3478be900d99d3b0e8216","modified":1587028777300},{"_id":"source/_posts/program_language/translate.png","hash":"d295691c21ffa04c3255d919302e5fa8ffdd4b43","modified":1587449336545},{"_id":"source/_posts/program_language/machine_language.png","hash":"eeb2e1175669ed088c736fb971ec6153b40fb60b","modified":1587449903627},{"_id":"public/about/index.html","hash":"975f1e2cd856076e4025f4c1cef894b49a87e7ba","modified":1587720839028},{"_id":"public/tags/index.html","hash":"fd5af744d697dc1f207a350b0b83060a636af21f","modified":1587720839028},{"_id":"public/2020/04/21/charset/index.html","hash":"10b47b58ba0f71d27241c64f6c6599c9bca31044","modified":1587720839028},{"_id":"public/2020/04/16/2020-04-16-bit/index.html","hash":"046cd67d6fdebfb55b3f5705dab40afc7d9a32fa","modified":1587720839028},{"_id":"public/archives/index.html","hash":"0bb0a950867da6494f0ab8e71e7b7c7bdd170a51","modified":1587720839028},{"_id":"public/archives/2016/index.html","hash":"9b17e3813744c8ee16bc4441300c1c2cbf02c212","modified":1587720839028},{"_id":"public/archives/2016/09/index.html","hash":"dd7667985b3422bc66de159b0d6bc0e32cb96d44","modified":1587720839028},{"_id":"public/archives/2020/index.html","hash":"8388d643e606f815f4a881fac1ada3e593c29d00","modified":1587720839028},{"_id":"public/archives/2020/04/index.html","hash":"b02f52f68d9520ab567e5dac2801a051f9d1e2b3","modified":1587720839028},{"_id":"public/categories/language/index.html","hash":"b24799b0d8d72659028b59891ed643d4e1871ff3","modified":1587720839028},{"_id":"public/categories/front-end/index.html","hash":"0d893b33a00140c98cccc56b8c306db58d0a439b","modified":1587720839028},{"_id":"public/tags/计算机通识/index.html","hash":"fc574f11e6d5b08af35630895ba890d9fbd624e9","modified":1587720839028},{"_id":"public/tags/hexo/index.html","hash":"0e0606d166a408aeec204cabf61392d8ba7fedaf","modified":1587720839028},{"_id":"public/tags/理财/index.html","hash":"dd55dda94ad4c830c6757f5b863ef4ec9d86caf0","modified":1587720839028},{"_id":"public/tags/比特币/index.html","hash":"e9215787323643b5d43a2734e354f2f415f90a1c","modified":1587720839028},{"_id":"public/tags/火币/index.html","hash":"ba4023654d1f328c76df20425eb0f7b0ac1de70b","modified":1587720839028},{"_id":"public/2020/04/21/program_language/index.html","hash":"fb8faa5e5789367b0e3b13e4422ebfa201a35c29","modified":1587720839028},{"_id":"public/2016/09/21/hello-world/index.html","hash":"84d5b213af40820e307e6a2e1b9ee3c0bea3e546","modified":1587720839028},{"_id":"public/index.html","hash":"a4b2c5f3944bf39dfaa69f09aa7c0ac05b236de4","modified":1587720839028},{"_id":"public/CNAME","hash":"330eb9aa056345f9fa921250b104af352fe4b7d5","modified":1587720839028},{"_id":"public/fonts/icomoon.eot","hash":"8300564edcd12262c6b8b97ba225bc00b72f5984","modified":1587720839028},{"_id":"public/fonts/icomoon.ttf","hash":"6b577c657ccb5de7c321e51942a52922a4e95ec1","modified":1587720839028},{"_id":"public/fonts/icomoon.svg","hash":"53a7893b9b630440f7381b156d3b7c9566c47523","modified":1587720839028},{"_id":"public/images/favicon.ico","hash":"491d07d9a67349261e4daccd4d2c18a9ebcd71c3","modified":1587720839028},{"_id":"public/svg/github.svg","hash":"f2355900fe0ec5ed2f4e6d4cb271bda5feb90f06","modified":1587720839028},{"_id":"public/fonts/icomoon.woff","hash":"5a3b86fa1122f78d9b285fbd390bf142721c51ed","modified":1587720839028},{"_id":"public/svg/twitter.svg","hash":"05ad5df10a4495e85ae417e241186e5205af930d","modified":1587720839028},{"_id":"public/svg/more.svg","hash":"d4aa97cd29baaaac750a60ce6e7b6b00fc573101","modified":1587720839028},{"_id":"public/svg/weibo.svg","hash":"af69ed38f353ebcf22a059cf6cf029dcfc2aee1a","modified":1587720839028},{"_id":"public/images/avatar.jpg","hash":"ec460a2d789b9bba4db99a359b483dc899ad5790","modified":1587720839028},{"_id":"public/2020/04/16/2020-04-16-bit/bbjy.png","hash":"dd27ca8212b3d6be79015740ba7f98c47a2b5d33","modified":1587720839028},{"_id":"public/css/aside.css","hash":"c44cab3a442add8ccc8e6cbccf8e0c8663236a2f","modified":1587720839028},{"_id":"public/js/scrollspy.min.js","hash":"076f7db44c3a05147144f736cae159baf1612f72","modified":1587720839028},{"_id":"public/css/icons.css","hash":"f6f65380db33567cc61afada447f2df642308f13","modified":1587720839028},{"_id":"public/css/mixin.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587720839028},{"_id":"public/css/vars.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1587720839028},{"_id":"public/css/monokai-sublime.css","hash":"7aa6de22e305c9195f555dab91f52aa3c6364383","modified":1587720839028},{"_id":"public/2020/04/16/2020-04-16-bit/deal.jpeg","hash":"e10374b3db0ec69c03c3478be900d99d3b0e8216","modified":1587720839028},{"_id":"public/css/comments.css","hash":"2062c75b2efb9ea2e02a78a4f8b747818069350b","modified":1587720839028},{"_id":"public/css/markdown.css","hash":"219c9ccf061a7585fa53320dbdd2017cd196b179","modified":1587720839028},{"_id":"public/2020/04/21/program_language/translate.png","hash":"d295691c21ffa04c3255d919302e5fa8ffdd4b43","modified":1587720839028},{"_id":"public/css/article.css","hash":"ef84ebea409d1691459f20a4eb79389ae9fe71cd","modified":1587720839028},{"_id":"public/css/app.css","hash":"dd3be9525fdc90fc4fd8718be18b6c45168a2a2a","modified":1587720839028},{"_id":"public/css/archive.css","hash":"ff13ff5b6a2f3d793a58aadef53c57cb3016d530","modified":1587720839028},{"_id":"public/css/category.css","hash":"b6059959855d73fc8eac634939be5322927589b1","modified":1587720839028},{"_id":"public/css/footer.css","hash":"9a6bff22188abf683f36d1409f0a10ded38c909e","modified":1587720839028},{"_id":"public/css/page.css","hash":"60250269bdfb9422745ca465edefce74f08e7613","modified":1587720839028},{"_id":"public/css/nav.css","hash":"36ee72a7ccefd42018ca965d5fe1d584bb5d961a","modified":1587720839028},{"_id":"public/css/reset.css","hash":"646902895a78120543446c735f9adc81beab92a6","modified":1587720839028},{"_id":"public/css/tags.css","hash":"6f1c8f8e345d60bf42c8240a8788bf5d5748a400","modified":1587720839028},{"_id":"public/css/widget.css","hash":"0becbaab3f03488d4bfe57d0f4c759592b241bc0","modified":1587720839028},{"_id":"public/2020/04/21/program_language/machine_language.png","hash":"eeb2e1175669ed088c736fb971ec6153b40fb60b","modified":1587720839028},{"_id":"public/css/style.css","hash":"71452ade02f1419e5ab79077c8e530ff92dff06e","modified":1587720839028}],"Category":[{"name":"language","_id":"ck9dyq9ui000230r52ptge9kk"},{"name":"front-end","_id":"ck9dyq9ur000630r5ebrl46rl"}],"Data":[],"Page":[{"title":"about","date":"2020-04-13T15:25:37.000Z","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-04-13 23:25:37\ncomments: false\n---\n","updated":"2020-04-16T02:28:19.839Z","path":"about/index.html","layout":"page","_id":"ck9dyq9v4000k30r59p9xgj3i","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-04-13T15:23:35.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-04-13 23:23:35\nlayout: tags\n---\n","updated":"2020-04-16T02:28:19.839Z","path":"tags/index.html","comments":1,"_id":"ck9dyq9v5000l30r5clks4ggh","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"计算机编码","date":"2020-04-21T02:00:05.000Z","_content":"\n\n## 编码\n\n## 词法分析找四个东西\n\n## Reference\n\n[unicode官网](https://home.unicode.org/)\n\n[unicode format](https://www.fileformat.info/info/unicode/)","source":"_posts/charset.md","raw":"---\ntitle: 计算机编码\ndate: 2020-04-21 10:00:05\ntags: 计算机通识\ncategories: language\n---\n\n\n## 编码\n\n## 词法分析找四个东西\n\n## Reference\n\n[unicode官网](https://home.unicode.org/)\n\n[unicode format](https://www.fileformat.info/info/unicode/)","slug":"charset","published":1,"updated":"2020-04-24T09:08:24.706Z","_id":"ck9dyq9u9000030r5c57p2hwy","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h2><h2 id=\"词法分析找四个东西\"><a href=\"#词法分析找四个东西\" class=\"headerlink\" title=\"词法分析找四个东西\"></a>词法分析找四个东西</h2><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://home.unicode.org/\" target=\"_blank\" rel=\"noopener\">unicode官网</a></p>\n<p><a href=\"https://www.fileformat.info/info/unicode/\" target=\"_blank\" rel=\"noopener\">unicode format</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h2><h2 id=\"词法分析找四个东西\"><a href=\"#词法分析找四个东西\" class=\"headerlink\" title=\"词法分析找四个东西\"></a>词法分析找四个东西</h2><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://home.unicode.org/\" target=\"_blank\" rel=\"noopener\">unicode官网</a></p>\n<p><a href=\"https://www.fileformat.info/info/unicode/\" target=\"_blank\" rel=\"noopener\">unicode format</a></p>\n"},{"title":"通过hexo搭建个人博客","date":"2016-09-21T02:00:05.000Z","_content":"\n## 新建一个hexo博客\n\n### 安装hexo\n\n```bash\n$ npm install -g hexo\n```\n\n### 初始化\n\n```bash\n$ cd yourblogfold\n$ hexo init\n\n```\n<!-- more -->\n## 常用命令\n\n### 生成一个新文章\n\n``` bash\n\n// [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。\n// <title> 为文章标题\n\n$ hexo new [] \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 启动服务器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n## 配合github page\n\n1. 在github新建一个仓库，仓库名必须为`<user-name>.github.io`。`user-name`是github的昵称。\n\n2. 修改 _config.yml 配置\n\n```bash\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n        type: git\n        repo: <你的仓库地址> # https://github.com/<user-name>/<user-name>.github.io\n        branch: master\n```\n\n3. 部署代码\n\n``` bash\n$ hexo deploy\n```\n\n4. 查看效果\n\n## 更换主题\n\n```bash\n# 下载到themes文件夹下\n$ git clone https://github.com/KevinOfNeu/hexo-theme-yourtheme yourtheme\n\n# 修改 _config.yml 配置\n$ theme: yourtheme\n\n```\n\n## 绑定自己的域名\n\n1. 修改GitHub Pages中的Custom domain选择\n\n  > Setting=>  GitHub Pages => Custom domain\n\n2. 在`/source`下添加名为`CNAME`的文件，无后缀。将你自己的域名放入文件内\n\n```bash\n    www.<yoursite>.name\n```\n\n3. 添加域名解析\n\n在你的域名管理后台（eg:万网），修改你的域名解析记录。  \n添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，这样通过[yoursitename].com和www.[yoursitename].com都能访问到你的博客了。\n\n详见(github官方配置文档)[https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]\n\n## 添加https\n\n自 2018 年 5 月 1 日，Github 支持自定义域名的 HTTPS 请求了。\n\n配置也相当简单：\n\n1. 更新 DNS 配置里的 A 记录，将其指向以下4个 IP 地址中的至少一个。\n\n    - 185.199.108.153\n    - 185.199.109.153\n    - 185.199.110.153\n    - 185.199.111.153\n\n2. GiHub Pages仓库的设置里勾选 'Enforce HTTPS'。\n  \n  > Setting=>  GitHub Pages => Custom domain\n\n## 添加评论\n\n  可以使用gitalk插件，[传送门](https://github.com/gitalk/gitalk)。具体配置就不写在这里了。  \n  推荐已经集成好的主题，[concise](https://github.com/sanonz/hexo-theme-concise)\n\n## 最佳实践\n\n  - 路径名包括文章的文件名，最好不要用中文","source":"_posts/hello-world.md","raw":"---\ntitle: 通过hexo搭建个人博客\ntags: hexo\ndate: 2016-09-21 10:00:05\ncategories: front-end\n---\n\n## 新建一个hexo博客\n\n### 安装hexo\n\n```bash\n$ npm install -g hexo\n```\n\n### 初始化\n\n```bash\n$ cd yourblogfold\n$ hexo init\n\n```\n<!-- more -->\n## 常用命令\n\n### 生成一个新文章\n\n``` bash\n\n// [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。\n// <title> 为文章标题\n\n$ hexo new [] \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 启动服务器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态文件\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n## 配合github page\n\n1. 在github新建一个仓库，仓库名必须为`<user-name>.github.io`。`user-name`是github的昵称。\n\n2. 修改 _config.yml 配置\n\n```bash\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n        type: git\n        repo: <你的仓库地址> # https://github.com/<user-name>/<user-name>.github.io\n        branch: master\n```\n\n3. 部署代码\n\n``` bash\n$ hexo deploy\n```\n\n4. 查看效果\n\n## 更换主题\n\n```bash\n# 下载到themes文件夹下\n$ git clone https://github.com/KevinOfNeu/hexo-theme-yourtheme yourtheme\n\n# 修改 _config.yml 配置\n$ theme: yourtheme\n\n```\n\n## 绑定自己的域名\n\n1. 修改GitHub Pages中的Custom domain选择\n\n  > Setting=>  GitHub Pages => Custom domain\n\n2. 在`/source`下添加名为`CNAME`的文件，无后缀。将你自己的域名放入文件内\n\n```bash\n    www.<yoursite>.name\n```\n\n3. 添加域名解析\n\n在你的域名管理后台（eg:万网），修改你的域名解析记录。  \n添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，这样通过[yoursitename].com和www.[yoursitename].com都能访问到你的博客了。\n\n详见(github官方配置文档)[https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]\n\n## 添加https\n\n自 2018 年 5 月 1 日，Github 支持自定义域名的 HTTPS 请求了。\n\n配置也相当简单：\n\n1. 更新 DNS 配置里的 A 记录，将其指向以下4个 IP 地址中的至少一个。\n\n    - 185.199.108.153\n    - 185.199.109.153\n    - 185.199.110.153\n    - 185.199.111.153\n\n2. GiHub Pages仓库的设置里勾选 'Enforce HTTPS'。\n  \n  > Setting=>  GitHub Pages => Custom domain\n\n## 添加评论\n\n  可以使用gitalk插件，[传送门](https://github.com/gitalk/gitalk)。具体配置就不写在这里了。  \n  推荐已经集成好的主题，[concise](https://github.com/sanonz/hexo-theme-concise)\n\n## 最佳实践\n\n  - 路径名包括文章的文件名，最好不要用中文","slug":"hello-world","published":1,"updated":"2020-04-24T09:07:24.876Z","_id":"ck9dyq9ug000130r567gshcn2","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"新建一个hexo博客\"><a href=\"#新建一个hexo博客\" class=\"headerlink\" title=\"新建一个hexo博客\"></a>新建一个hexo博客</h2><h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> yourblogfold</span><br><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"生成一个新文章\"><a href=\"#生成一个新文章\" class=\"headerlink\" title=\"生成一个新文章\"></a>生成一个新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。</span><br><span class=\"line\">// &lt;title&gt; 为文章标题</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo new [] <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"启动服务器\"><a href=\"#启动服务器\" class=\"headerlink\" title=\"启动服务器\"></a>启动服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"配合github-page\"><a href=\"#配合github-page\" class=\"headerlink\" title=\"配合github page\"></a>配合github page</h2><ol>\n<li><p>在github新建一个仓库，仓库名必须为<code>&lt;user-name&gt;.github.io</code>。<code>user-name</code>是github的昵称。</p>\n</li>\n<li><p>修改 _config.yml 配置</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repo: &lt;你的仓库地址&gt; <span class=\"comment\"># https://github.com/&lt;user-name&gt;/&lt;user-name&gt;.github.io</span></span><br><span class=\"line\">    branch: master</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>部署代码</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>查看效果</li>\n</ol>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载到themes文件夹下</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/KevinOfNeu/hexo-theme-yourtheme yourtheme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 _config.yml 配置</span></span><br><span class=\"line\">$ theme: yourtheme</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"绑定自己的域名\"><a href=\"#绑定自己的域名\" class=\"headerlink\" title=\"绑定自己的域名\"></a>绑定自己的域名</h2><ol>\n<li><p>修改GitHub Pages中的Custom domain选择</p>\n<blockquote>\n<p>Setting=&gt;  GitHub Pages =&gt; Custom domain</p>\n</blockquote>\n</li>\n<li><p>在<code>/source</code>下添加名为<code>CNAME</code>的文件，无后缀。将你自己的域名放入文件内</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.&lt;yoursite&gt;.name</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>添加域名解析</li>\n</ol>\n<p>在你的域名管理后台（eg:万网），修改你的域名解析记录。<br>添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，这样通过[yoursitename].com和www.[yoursitename].com都能访问到你的博客了。</p>\n<p>详见(github官方配置文档)[<a href=\"https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]\" target=\"_blank\" rel=\"noopener\">https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]</a></p>\n<h2 id=\"添加https\"><a href=\"#添加https\" class=\"headerlink\" title=\"添加https\"></a>添加https</h2><p>自 2018 年 5 月 1 日，Github 支持自定义域名的 HTTPS 请求了。</p>\n<p>配置也相当简单：</p>\n<ol>\n<li><p>更新 DNS 配置里的 A 记录，将其指向以下4个 IP 地址中的至少一个。</p>\n<ul>\n<li>185.199.108.153</li>\n<li>185.199.109.153</li>\n<li>185.199.110.153</li>\n<li>185.199.111.153</li>\n</ul>\n</li>\n<li><p>GiHub Pages仓库的设置里勾选 ‘Enforce HTTPS’。</p>\n<blockquote>\n<p>Setting=&gt;  GitHub Pages =&gt; Custom domain</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"添加评论\"><a href=\"#添加评论\" class=\"headerlink\" title=\"添加评论\"></a>添加评论</h2><p>  可以使用gitalk插件，<a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"noopener\">传送门</a>。具体配置就不写在这里了。<br>  推荐已经集成好的主题，<a href=\"https://github.com/sanonz/hexo-theme-concise\" target=\"_blank\" rel=\"noopener\">concise</a></p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><ul>\n<li>路径名包括文章的文件名，最好不要用中文</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"新建一个hexo博客\"><a href=\"#新建一个hexo博客\" class=\"headerlink\" title=\"新建一个hexo博客\"></a>新建一个hexo博客</h2><h3 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> yourblogfold</span><br><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><h3 id=\"生成一个新文章\"><a href=\"#生成一个新文章\" class=\"headerlink\" title=\"生成一个新文章\"></a>生成一个新文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// [layout] 为布局，可选项为 `post`、`page`、`draft`，这将决定文章所在文件路径。</span><br><span class=\"line\">// &lt;title&gt; 为文章标题</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo new [] <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"启动服务器\"><a href=\"#启动服务器\" class=\"headerlink\" title=\"启动服务器\"></a>启动服务器</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h2 id=\"配合github-page\"><a href=\"#配合github-page\" class=\"headerlink\" title=\"配合github page\"></a>配合github page</h2><ol>\n<li><p>在github新建一个仓库，仓库名必须为<code>&lt;user-name&gt;.github.io</code>。<code>user-name</code>是github的昵称。</p>\n</li>\n<li><p>修改 _config.yml 配置</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    repo: &lt;你的仓库地址&gt; <span class=\"comment\"># https://github.com/&lt;user-name&gt;/&lt;user-name&gt;.github.io</span></span><br><span class=\"line\">    branch: master</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>部署代码</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>查看效果</li>\n</ol>\n<h2 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载到themes文件夹下</span></span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/KevinOfNeu/hexo-theme-yourtheme yourtheme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 修改 _config.yml 配置</span></span><br><span class=\"line\">$ theme: yourtheme</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"绑定自己的域名\"><a href=\"#绑定自己的域名\" class=\"headerlink\" title=\"绑定自己的域名\"></a>绑定自己的域名</h2><ol>\n<li><p>修改GitHub Pages中的Custom domain选择</p>\n<blockquote>\n<p>Setting=&gt;  GitHub Pages =&gt; Custom domain</p>\n</blockquote>\n</li>\n<li><p>在<code>/source</code>下添加名为<code>CNAME</code>的文件，无后缀。将你自己的域名放入文件内</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.&lt;yoursite&gt;.name</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>添加域名解析</li>\n</ol>\n<p>在你的域名管理后台（eg:万网），修改你的域名解析记录。<br>添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，这样通过[yoursitename].com和www.[yoursitename].com都能访问到你的博客了。</p>\n<p>详见(github官方配置文档)[<a href=\"https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]\" target=\"_blank\" rel=\"noopener\">https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site]</a></p>\n<h2 id=\"添加https\"><a href=\"#添加https\" class=\"headerlink\" title=\"添加https\"></a>添加https</h2><p>自 2018 年 5 月 1 日，Github 支持自定义域名的 HTTPS 请求了。</p>\n<p>配置也相当简单：</p>\n<ol>\n<li><p>更新 DNS 配置里的 A 记录，将其指向以下4个 IP 地址中的至少一个。</p>\n<ul>\n<li>185.199.108.153</li>\n<li>185.199.109.153</li>\n<li>185.199.110.153</li>\n<li>185.199.111.153</li>\n</ul>\n</li>\n<li><p>GiHub Pages仓库的设置里勾选 ‘Enforce HTTPS’。</p>\n<blockquote>\n<p>Setting=&gt;  GitHub Pages =&gt; Custom domain</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"添加评论\"><a href=\"#添加评论\" class=\"headerlink\" title=\"添加评论\"></a>添加评论</h2><p>  可以使用gitalk插件，<a href=\"https://github.com/gitalk/gitalk\" target=\"_blank\" rel=\"noopener\">传送门</a>。具体配置就不写在这里了。<br>  推荐已经集成好的主题，<a href=\"https://github.com/sanonz/hexo-theme-concise\" target=\"_blank\" rel=\"noopener\">concise</a></p>\n<h2 id=\"最佳实践\"><a href=\"#最佳实践\" class=\"headerlink\" title=\"最佳实践\"></a>最佳实践</h2><ul>\n<li>路径名包括文章的文件名，最好不要用中文</li>\n</ul>"},{"title":"火币平台比特币交易","date":"2020-04-16T05:13:56.000Z","_content":"\n## 如何购买\n\n1. 点击右上角“登录”， 输入注册手机号码、登录密码，点击“登录”后拖动滑块至最右登陆。\n2. 登陆后选择左上角法币交易。\n3. 选择你想要的币种（这里以购买BTC为例），考虑价格、支付方式选择广告，点击“购买BTC”。\n<!-- more -->\n![bbjy](bbjy.png)\n4. 输入想购买的金额/数量，点击“下单”。(这里的价格并不是实时价格，是卖主根据实时价格所定的主观价格。)\n5. 在订单详情页，确认付款金额（总价）和付款方式 。 支持的交易方式有：网银、手机银行、支付宝、微信或其他第三方支付平台，具体哪种由卖家决定。\n\n注意点：\n\n1. 涉及到人民币提现以及购买只能走法币。\n2. 币币操作类似于股市的低买高卖（如果你操作得当的话）。是及时的是虚拟交易。法币交易是真实的。是将数字币麦为人民币。\n3. 如买家取消3次当日将无法在购买，次日0点才可以\n  <img src=\"deal.jpeg\" width=\"500px\">\n4. BTC ETH  USDT  BCH  HUSD等等，这些是币的种类。 和账号种类没有关系。\n\n法币账户下可以有 BTC ETH  USDT  BCH  HUSD。\n币币账户下也可以有 BTC ETH  USDT  BCH  HUSD。\n\n相同币种可以通过“划转提现”进行转换。\nBTC ETH这两种币的价格波动比较大。USDT HUSD属于比较稳定的币，HUDT和美元基本挂钩。\n\n## 如何出售（提现）\n\n只有在法币才可以卖出成为人民币\n\n将账户币币转换成法币，如果您在火币币币交易区的数字资产不在法币交易区支持名单中，请先换成法币交易区支持的数字资产。先点击【资产】-【法币资产】-【划转提现】，把资产划转到法币账户中—点击【普通区/大宗区】，选择想要出售的币种，选择下方的广告进行下单—下单后请等待买家给您付款（支付宝/微信/银行卡），确认收款后，点击【确认放行】即可完成交易。\n\n## 几个概念\n\n### 币币账户\n\n- 币币交易是场内交易价格  实时的价格\n- 币币是做低买高卖的交易的\n- 币币和法币的价格都是有波动的\n\n### 法币账户\n\n- 法币交易是点对点交易场外交易\n- 价格由广告商家（买主）设定的\n- 法币最小交易是50人民币\n\n### BTC · 比特币\n\n比特币（Bitcoin，简称BTC）是目前使用最为广泛的一种数字货币，它诞生于2009年1月3日，是一种点对点（P2P）传输的数字加密货币，总量2100万枚。比特币网络每10分钟释放出一定数量币，预计在2140年达到极限。比特币被投资者称为“数字黄金”。比特币依据特定算法，通过大量的计算产生，不依靠特定货币机构发行，其使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学设计确保货币流通各个环节安全性，可确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实拥有者转移、支付及兑现。同样确保了货币所有权与流通交易的匿名性。\n\n### USDT · Tether\n\nUSDT是Tether公司推出的基于稳定价值货币美元（USD）的代币Tether USD（下称USDT），1USDT=1美元，用户可以随时使用USDT与USD进行1:1兑换。Tether公司严格遵守1:1准备金保证，即每发行1个 USDT 代币，其银行账户都会有1美元的资金保障。用户可以在 Tether 平台进行资金查询，以保障透明度。用户可以通过SWIFT电汇美元至Tether公司提供的银行帐户，或通过交易所换取USDT。赎回美元时，反向操作即可。用户也可在交易所用比特币换取USDT。\n\n## HUSD (HUSD)\n\nHUSD是由Stable公司和Paxos TRUST LLC合作发行的美元稳定币。HUSD与美元1:1锚定，由第三方审计公司监督并审计。\n\n## Reference\n\n[数字资产介绍](https://www.huobi.io/zh-cn/assetintro/)\n","source":"_posts/2020-04-16-bit.md","raw":"---\ntitle: 火币平台比特币交易\ndate: 2020-04-16 13:13:56\ntags: \n- 理财 \n- 比特币\n- 火币\n---\n\n## 如何购买\n\n1. 点击右上角“登录”， 输入注册手机号码、登录密码，点击“登录”后拖动滑块至最右登陆。\n2. 登陆后选择左上角法币交易。\n3. 选择你想要的币种（这里以购买BTC为例），考虑价格、支付方式选择广告，点击“购买BTC”。\n<!-- more -->\n![bbjy](bbjy.png)\n4. 输入想购买的金额/数量，点击“下单”。(这里的价格并不是实时价格，是卖主根据实时价格所定的主观价格。)\n5. 在订单详情页，确认付款金额（总价）和付款方式 。 支持的交易方式有：网银、手机银行、支付宝、微信或其他第三方支付平台，具体哪种由卖家决定。\n\n注意点：\n\n1. 涉及到人民币提现以及购买只能走法币。\n2. 币币操作类似于股市的低买高卖（如果你操作得当的话）。是及时的是虚拟交易。法币交易是真实的。是将数字币麦为人民币。\n3. 如买家取消3次当日将无法在购买，次日0点才可以\n  <img src=\"deal.jpeg\" width=\"500px\">\n4. BTC ETH  USDT  BCH  HUSD等等，这些是币的种类。 和账号种类没有关系。\n\n法币账户下可以有 BTC ETH  USDT  BCH  HUSD。\n币币账户下也可以有 BTC ETH  USDT  BCH  HUSD。\n\n相同币种可以通过“划转提现”进行转换。\nBTC ETH这两种币的价格波动比较大。USDT HUSD属于比较稳定的币，HUDT和美元基本挂钩。\n\n## 如何出售（提现）\n\n只有在法币才可以卖出成为人民币\n\n将账户币币转换成法币，如果您在火币币币交易区的数字资产不在法币交易区支持名单中，请先换成法币交易区支持的数字资产。先点击【资产】-【法币资产】-【划转提现】，把资产划转到法币账户中—点击【普通区/大宗区】，选择想要出售的币种，选择下方的广告进行下单—下单后请等待买家给您付款（支付宝/微信/银行卡），确认收款后，点击【确认放行】即可完成交易。\n\n## 几个概念\n\n### 币币账户\n\n- 币币交易是场内交易价格  实时的价格\n- 币币是做低买高卖的交易的\n- 币币和法币的价格都是有波动的\n\n### 法币账户\n\n- 法币交易是点对点交易场外交易\n- 价格由广告商家（买主）设定的\n- 法币最小交易是50人民币\n\n### BTC · 比特币\n\n比特币（Bitcoin，简称BTC）是目前使用最为广泛的一种数字货币，它诞生于2009年1月3日，是一种点对点（P2P）传输的数字加密货币，总量2100万枚。比特币网络每10分钟释放出一定数量币，预计在2140年达到极限。比特币被投资者称为“数字黄金”。比特币依据特定算法，通过大量的计算产生，不依靠特定货币机构发行，其使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学设计确保货币流通各个环节安全性，可确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实拥有者转移、支付及兑现。同样确保了货币所有权与流通交易的匿名性。\n\n### USDT · Tether\n\nUSDT是Tether公司推出的基于稳定价值货币美元（USD）的代币Tether USD（下称USDT），1USDT=1美元，用户可以随时使用USDT与USD进行1:1兑换。Tether公司严格遵守1:1准备金保证，即每发行1个 USDT 代币，其银行账户都会有1美元的资金保障。用户可以在 Tether 平台进行资金查询，以保障透明度。用户可以通过SWIFT电汇美元至Tether公司提供的银行帐户，或通过交易所换取USDT。赎回美元时，反向操作即可。用户也可在交易所用比特币换取USDT。\n\n## HUSD (HUSD)\n\nHUSD是由Stable公司和Paxos TRUST LLC合作发行的美元稳定币。HUSD与美元1:1锚定，由第三方审计公司监督并审计。\n\n## Reference\n\n[数字资产介绍](https://www.huobi.io/zh-cn/assetintro/)\n","slug":"2020-04-16-bit","published":1,"updated":"2020-04-24T08:24:15.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9dyq9uk000430r5b7hs85cv","content":"<h2 id=\"如何购买\"><a href=\"#如何购买\" class=\"headerlink\" title=\"如何购买\"></a>如何购买</h2><ol>\n<li>点击右上角“登录”， 输入注册手机号码、登录密码，点击“登录”后拖动滑块至最右登陆。</li>\n<li>登陆后选择左上角法币交易。</li>\n<li>选择你想要的币种（这里以购买BTC为例），考虑价格、支付方式选择广告，点击“购买BTC”。<a id=\"more\"></a>\n<img src=\"bbjy.png\" alt=\"bbjy\"></li>\n<li>输入想购买的金额/数量，点击“下单”。(这里的价格并不是实时价格，是卖主根据实时价格所定的主观价格。)</li>\n<li>在订单详情页，确认付款金额（总价）和付款方式 。 支持的交易方式有：网银、手机银行、支付宝、微信或其他第三方支付平台，具体哪种由卖家决定。</li>\n</ol>\n<p>注意点：</p>\n<ol>\n<li>涉及到人民币提现以及购买只能走法币。</li>\n<li>币币操作类似于股市的低买高卖（如果你操作得当的话）。是及时的是虚拟交易。法币交易是真实的。是将数字币麦为人民币。</li>\n<li>如买家取消3次当日将无法在购买，次日0点才可以<img src=\"deal.jpeg\" width=\"500px\"></li>\n<li>BTC ETH  USDT  BCH  HUSD等等，这些是币的种类。 和账号种类没有关系。</li>\n</ol>\n<p>法币账户下可以有 BTC ETH  USDT  BCH  HUSD。<br>币币账户下也可以有 BTC ETH  USDT  BCH  HUSD。</p>\n<p>相同币种可以通过“划转提现”进行转换。<br>BTC ETH这两种币的价格波动比较大。USDT HUSD属于比较稳定的币，HUDT和美元基本挂钩。</p>\n<h2 id=\"如何出售（提现）\"><a href=\"#如何出售（提现）\" class=\"headerlink\" title=\"如何出售（提现）\"></a>如何出售（提现）</h2><p>只有在法币才可以卖出成为人民币</p>\n<p>将账户币币转换成法币，如果您在火币币币交易区的数字资产不在法币交易区支持名单中，请先换成法币交易区支持的数字资产。先点击【资产】-【法币资产】-【划转提现】，把资产划转到法币账户中—点击【普通区/大宗区】，选择想要出售的币种，选择下方的广告进行下单—下单后请等待买家给您付款（支付宝/微信/银行卡），确认收款后，点击【确认放行】即可完成交易。</p>\n<h2 id=\"几个概念\"><a href=\"#几个概念\" class=\"headerlink\" title=\"几个概念\"></a>几个概念</h2><h3 id=\"币币账户\"><a href=\"#币币账户\" class=\"headerlink\" title=\"币币账户\"></a>币币账户</h3><ul>\n<li>币币交易是场内交易价格  实时的价格</li>\n<li>币币是做低买高卖的交易的</li>\n<li>币币和法币的价格都是有波动的</li>\n</ul>\n<h3 id=\"法币账户\"><a href=\"#法币账户\" class=\"headerlink\" title=\"法币账户\"></a>法币账户</h3><ul>\n<li>法币交易是点对点交易场外交易</li>\n<li>价格由广告商家（买主）设定的</li>\n<li>法币最小交易是50人民币</li>\n</ul>\n<h3 id=\"BTC-·-比特币\"><a href=\"#BTC-·-比特币\" class=\"headerlink\" title=\"BTC · 比特币\"></a>BTC · 比特币</h3><p>比特币（Bitcoin，简称BTC）是目前使用最为广泛的一种数字货币，它诞生于2009年1月3日，是一种点对点（P2P）传输的数字加密货币，总量2100万枚。比特币网络每10分钟释放出一定数量币，预计在2140年达到极限。比特币被投资者称为“数字黄金”。比特币依据特定算法，通过大量的计算产生，不依靠特定货币机构发行，其使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学设计确保货币流通各个环节安全性，可确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实拥有者转移、支付及兑现。同样确保了货币所有权与流通交易的匿名性。</p>\n<h3 id=\"USDT-·-Tether\"><a href=\"#USDT-·-Tether\" class=\"headerlink\" title=\"USDT · Tether\"></a>USDT · Tether</h3><p>USDT是Tether公司推出的基于稳定价值货币美元（USD）的代币Tether USD（下称USDT），1USDT=1美元，用户可以随时使用USDT与USD进行1:1兑换。Tether公司严格遵守1:1准备金保证，即每发行1个 USDT 代币，其银行账户都会有1美元的资金保障。用户可以在 Tether 平台进行资金查询，以保障透明度。用户可以通过SWIFT电汇美元至Tether公司提供的银行帐户，或通过交易所换取USDT。赎回美元时，反向操作即可。用户也可在交易所用比特币换取USDT。</p>\n<h2 id=\"HUSD-HUSD\"><a href=\"#HUSD-HUSD\" class=\"headerlink\" title=\"HUSD (HUSD)\"></a>HUSD (HUSD)</h2><p>HUSD是由Stable公司和Paxos TRUST LLC合作发行的美元稳定币。HUSD与美元1:1锚定，由第三方审计公司监督并审计。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.huobi.io/zh-cn/assetintro/\" target=\"_blank\" rel=\"noopener\">数字资产介绍</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"如何购买\"><a href=\"#如何购买\" class=\"headerlink\" title=\"如何购买\"></a>如何购买</h2><ol>\n<li>点击右上角“登录”， 输入注册手机号码、登录密码，点击“登录”后拖动滑块至最右登陆。</li>\n<li>登陆后选择左上角法币交易。</li>\n<li>选择你想要的币种（这里以购买BTC为例），考虑价格、支付方式选择广告，点击“购买BTC”。","more":"<img src=\"bbjy.png\" alt=\"bbjy\"></li>\n<li>输入想购买的金额/数量，点击“下单”。(这里的价格并不是实时价格，是卖主根据实时价格所定的主观价格。)</li>\n<li>在订单详情页，确认付款金额（总价）和付款方式 。 支持的交易方式有：网银、手机银行、支付宝、微信或其他第三方支付平台，具体哪种由卖家决定。</li>\n</ol>\n<p>注意点：</p>\n<ol>\n<li>涉及到人民币提现以及购买只能走法币。</li>\n<li>币币操作类似于股市的低买高卖（如果你操作得当的话）。是及时的是虚拟交易。法币交易是真实的。是将数字币麦为人民币。</li>\n<li>如买家取消3次当日将无法在购买，次日0点才可以<img src=\"deal.jpeg\" width=\"500px\"></li>\n<li>BTC ETH  USDT  BCH  HUSD等等，这些是币的种类。 和账号种类没有关系。</li>\n</ol>\n<p>法币账户下可以有 BTC ETH  USDT  BCH  HUSD。<br>币币账户下也可以有 BTC ETH  USDT  BCH  HUSD。</p>\n<p>相同币种可以通过“划转提现”进行转换。<br>BTC ETH这两种币的价格波动比较大。USDT HUSD属于比较稳定的币，HUDT和美元基本挂钩。</p>\n<h2 id=\"如何出售（提现）\"><a href=\"#如何出售（提现）\" class=\"headerlink\" title=\"如何出售（提现）\"></a>如何出售（提现）</h2><p>只有在法币才可以卖出成为人民币</p>\n<p>将账户币币转换成法币，如果您在火币币币交易区的数字资产不在法币交易区支持名单中，请先换成法币交易区支持的数字资产。先点击【资产】-【法币资产】-【划转提现】，把资产划转到法币账户中—点击【普通区/大宗区】，选择想要出售的币种，选择下方的广告进行下单—下单后请等待买家给您付款（支付宝/微信/银行卡），确认收款后，点击【确认放行】即可完成交易。</p>\n<h2 id=\"几个概念\"><a href=\"#几个概念\" class=\"headerlink\" title=\"几个概念\"></a>几个概念</h2><h3 id=\"币币账户\"><a href=\"#币币账户\" class=\"headerlink\" title=\"币币账户\"></a>币币账户</h3><ul>\n<li>币币交易是场内交易价格  实时的价格</li>\n<li>币币是做低买高卖的交易的</li>\n<li>币币和法币的价格都是有波动的</li>\n</ul>\n<h3 id=\"法币账户\"><a href=\"#法币账户\" class=\"headerlink\" title=\"法币账户\"></a>法币账户</h3><ul>\n<li>法币交易是点对点交易场外交易</li>\n<li>价格由广告商家（买主）设定的</li>\n<li>法币最小交易是50人民币</li>\n</ul>\n<h3 id=\"BTC-·-比特币\"><a href=\"#BTC-·-比特币\" class=\"headerlink\" title=\"BTC · 比特币\"></a>BTC · 比特币</h3><p>比特币（Bitcoin，简称BTC）是目前使用最为广泛的一种数字货币，它诞生于2009年1月3日，是一种点对点（P2P）传输的数字加密货币，总量2100万枚。比特币网络每10分钟释放出一定数量币，预计在2140年达到极限。比特币被投资者称为“数字黄金”。比特币依据特定算法，通过大量的计算产生，不依靠特定货币机构发行，其使用整个P2P网络中众多节点构成的分布式数据库来确认并记录所有的交易行为，并使用密码学设计确保货币流通各个环节安全性，可确保无法通过大量制造比特币来人为操控币值。基于密码学的设计可以使比特币只能被真实拥有者转移、支付及兑现。同样确保了货币所有权与流通交易的匿名性。</p>\n<h3 id=\"USDT-·-Tether\"><a href=\"#USDT-·-Tether\" class=\"headerlink\" title=\"USDT · Tether\"></a>USDT · Tether</h3><p>USDT是Tether公司推出的基于稳定价值货币美元（USD）的代币Tether USD（下称USDT），1USDT=1美元，用户可以随时使用USDT与USD进行1:1兑换。Tether公司严格遵守1:1准备金保证，即每发行1个 USDT 代币，其银行账户都会有1美元的资金保障。用户可以在 Tether 平台进行资金查询，以保障透明度。用户可以通过SWIFT电汇美元至Tether公司提供的银行帐户，或通过交易所换取USDT。赎回美元时，反向操作即可。用户也可在交易所用比特币换取USDT。</p>\n<h2 id=\"HUSD-HUSD\"><a href=\"#HUSD-HUSD\" class=\"headerlink\" title=\"HUSD (HUSD)\"></a>HUSD (HUSD)</h2><p>HUSD是由Stable公司和Paxos TRUST LLC合作发行的美元稳定币。HUSD与美元1:1锚定，由第三方审计公司监督并审计。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.huobi.io/zh-cn/assetintro/\" target=\"_blank\" rel=\"noopener\">数字资产介绍</a></p>"},{"title":"计算机通用语言","date":"2020-04-21T02:46:09.000Z","_content":"\n## 如何让计算机理解代码\n\n>从最基本的角度看，一种编程语言就是：把一组特定的**词汇**，按照一组特定的**语法**规则组合到一起，形成计算机可以通过某种方式“**理解**”的东西，可以让计算机据此执行特定的**动作**。\n\n这不是一个很容易解释的话题。相比人类，计算机是一个没有感情的机器。没有感情有好也有坏。好处就是你定义好规则，它就会按照你的规则办事。如何制定这个规则，也就是如何设计一门语言。人类有English，中文，日本人，Espanol，عربي， 한국어...。每个语言都有自己的表达规则，计算机语言也不例外。那么如何从无到有设计一套语言呢？在开始设计之前，我们先来理解几个基础词汇。\n\n- 文法 （Grammar）\n- 语法  (Syntax)\n- 词法 （Lexical）\n<!-- more -->\n以人工英汉翻译为例\n![](translate.png)\n\n首先是解析的过程： \n\n当拿到一个句子，我们首先理解了每一个词（词组）的意思（词法分析），然后理解词组组合后的短语（语法分析）。最后将短语组合翻译，变成一个句子的语义（语义分析）。这个语义是中间表示，独立于具体的语言。拿到语义之后你就可以生成目标语言。人类翻译的目标语言可以是“中文”，“韩文”，“法文”等等。具体是哪个形式，由接受人决定，你翻译给谁听，就译成ta理解的形式。而对计算机而言，目标语言就是机器语言。\n\n![](machine_language.png)\n\n知道了这个过程之后，我们就可以继续思考一下，如何取制定一套语言的文法规则。\n\n## 如何设计一套计算机语言\n\n根据我们上面的分析，要想让计算机“读”懂我们的代码，就要有一套固定的语义，语法和词法体系。那么现在我们常用的语言是按照什么规则制定的呢？\n\n### 语法部分\n\n#### 非形式语法\n\n- 中文 英文\n\n#### 形式语法（乔姆斯基谱系）\n\n- O型  无限制文法\n  - `?::=?`\n- 1型  上下文相关文法\n  - `?<A>?::=?<B>`\n- 2型  上下文无关文法\n  - `<A>::=?`\n- 3型  正则文法\n  - `<A>::=<A>？`\n\n其中 **上下文无关语言**为大多数**程序设计语言**的语法提供了理论基础。\n\n在这个理论基础上，有了一些具体的实践。 以BNF为例，BNF是比较常见的一种形式。\n\n### 产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)\n\n- 用尖括号括起来的名称来表示语法结构名\n- 语法结构分成基础结构和需要用其他语法结构定义的复合结构\n  - 基础结构称终结符\n  - 复合结构称非终结符\n- 引号和中间的字符表示终结符\n- 可以有括号\n- `*` 表示重复多次\n- `|` 表示或\n- `+` 表示至少一次\n\n一个四则运算的BNF凡是\n\n```bash\n<Number> ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | ... | \"9\"\n\n<DecimalNumber> ::= \"0\" | ((\"1\" | \"2\" | \"3\" | \"4\" | ... | \"9\")<Number>*)\n\n<PrimaryExpression> ::= <DecimalNumber> | \"(\" <LogicalExpression> \")\"\n\n<Multiplicative> ::= <PrimaryExpression> |\n                   <Multiplicative> \"*\" <PrimaryExpression> |\n                   <Multiplicative> \"/\" <PrimaryExpression>\n\n<AddtiveExpression> ::= <Multiplicative> |\n                      <AddtiveExpression> \"+\" <Multiplicative> |\n                      <AddtiveExpression> \"-\" <Multiplicative>\n\n\n<logicalExpression> ::= <AddtiveExpression> |\n                      <logicalExpression> \"||\" <AddtiveExpression> |\n                      <logicalExpression> \"&&\" <AddtiveExpression>\n```\n\n### 常见的语言分析\n\n#### JavaScript\n\nJavaScript语法多是上下文无关文法为主。但是也有特殊的情况，比如:\n\n```javascript\n    {\n        get a {return 1},  //在这里get是一个关键字\n        get: 1             //而在这里就是一个变量名\n    }\n```\n\n表达式部分多在3型，正则文法。但也有特殊的情况，\n\n```js\n    2**1**2\n```\n\nJavascript中，`/`可能是除号，也可能是正则表达式开头，处理方式类似VB，字符串模板中也需要特殊处理，还有自动插入分号规则。\n\n#### C++\n\nC++是非形式化语言，C++中，`*`坑你表示乘号或者指针，具体是哪个，取决于星号前面的标识符是否被声明为类型\n\n#### VB\n\nVB基本上是1型。`<`可能是小于号，也可能是XML直接量的开始，取决于当前位置是否可以接受XML直接量。\n\n### Python\n\n行首的Tab符和空格会根据上一行的行首空白以一定规则被处处理成虚拟终结符indent或者dedent\n\n### 其他语言\n\nLisp, C, PHP, JAVA, SQL\n\n## reference\n\n[怎样设计一套程序设计语言？](https://www.zhihu.com/question/19756886)\n[编译原理（哈工大）—— bilibili](https://www.bilibili.com/video/BV1zW411t7YE?from=search&seid=1590568849937040326)","source":"_posts/program_language.md","raw":"---\ntitle: 计算机通用语言\ndate: 2020-04-21 10:46:09\ntags: 计算机通识\ncategories: language\n---\n\n## 如何让计算机理解代码\n\n>从最基本的角度看，一种编程语言就是：把一组特定的**词汇**，按照一组特定的**语法**规则组合到一起，形成计算机可以通过某种方式“**理解**”的东西，可以让计算机据此执行特定的**动作**。\n\n这不是一个很容易解释的话题。相比人类，计算机是一个没有感情的机器。没有感情有好也有坏。好处就是你定义好规则，它就会按照你的规则办事。如何制定这个规则，也就是如何设计一门语言。人类有English，中文，日本人，Espanol，عربي， 한국어...。每个语言都有自己的表达规则，计算机语言也不例外。那么如何从无到有设计一套语言呢？在开始设计之前，我们先来理解几个基础词汇。\n\n- 文法 （Grammar）\n- 语法  (Syntax)\n- 词法 （Lexical）\n<!-- more -->\n以人工英汉翻译为例\n![](translate.png)\n\n首先是解析的过程： \n\n当拿到一个句子，我们首先理解了每一个词（词组）的意思（词法分析），然后理解词组组合后的短语（语法分析）。最后将短语组合翻译，变成一个句子的语义（语义分析）。这个语义是中间表示，独立于具体的语言。拿到语义之后你就可以生成目标语言。人类翻译的目标语言可以是“中文”，“韩文”，“法文”等等。具体是哪个形式，由接受人决定，你翻译给谁听，就译成ta理解的形式。而对计算机而言，目标语言就是机器语言。\n\n![](machine_language.png)\n\n知道了这个过程之后，我们就可以继续思考一下，如何取制定一套语言的文法规则。\n\n## 如何设计一套计算机语言\n\n根据我们上面的分析，要想让计算机“读”懂我们的代码，就要有一套固定的语义，语法和词法体系。那么现在我们常用的语言是按照什么规则制定的呢？\n\n### 语法部分\n\n#### 非形式语法\n\n- 中文 英文\n\n#### 形式语法（乔姆斯基谱系）\n\n- O型  无限制文法\n  - `?::=?`\n- 1型  上下文相关文法\n  - `?<A>?::=?<B>`\n- 2型  上下文无关文法\n  - `<A>::=?`\n- 3型  正则文法\n  - `<A>::=<A>？`\n\n其中 **上下文无关语言**为大多数**程序设计语言**的语法提供了理论基础。\n\n在这个理论基础上，有了一些具体的实践。 以BNF为例，BNF是比较常见的一种形式。\n\n### 产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)\n\n- 用尖括号括起来的名称来表示语法结构名\n- 语法结构分成基础结构和需要用其他语法结构定义的复合结构\n  - 基础结构称终结符\n  - 复合结构称非终结符\n- 引号和中间的字符表示终结符\n- 可以有括号\n- `*` 表示重复多次\n- `|` 表示或\n- `+` 表示至少一次\n\n一个四则运算的BNF凡是\n\n```bash\n<Number> ::= \"0\" | \"1\" | \"2\" | \"3\" | \"4\" | ... | \"9\"\n\n<DecimalNumber> ::= \"0\" | ((\"1\" | \"2\" | \"3\" | \"4\" | ... | \"9\")<Number>*)\n\n<PrimaryExpression> ::= <DecimalNumber> | \"(\" <LogicalExpression> \")\"\n\n<Multiplicative> ::= <PrimaryExpression> |\n                   <Multiplicative> \"*\" <PrimaryExpression> |\n                   <Multiplicative> \"/\" <PrimaryExpression>\n\n<AddtiveExpression> ::= <Multiplicative> |\n                      <AddtiveExpression> \"+\" <Multiplicative> |\n                      <AddtiveExpression> \"-\" <Multiplicative>\n\n\n<logicalExpression> ::= <AddtiveExpression> |\n                      <logicalExpression> \"||\" <AddtiveExpression> |\n                      <logicalExpression> \"&&\" <AddtiveExpression>\n```\n\n### 常见的语言分析\n\n#### JavaScript\n\nJavaScript语法多是上下文无关文法为主。但是也有特殊的情况，比如:\n\n```javascript\n    {\n        get a {return 1},  //在这里get是一个关键字\n        get: 1             //而在这里就是一个变量名\n    }\n```\n\n表达式部分多在3型，正则文法。但也有特殊的情况，\n\n```js\n    2**1**2\n```\n\nJavascript中，`/`可能是除号，也可能是正则表达式开头，处理方式类似VB，字符串模板中也需要特殊处理，还有自动插入分号规则。\n\n#### C++\n\nC++是非形式化语言，C++中，`*`坑你表示乘号或者指针，具体是哪个，取决于星号前面的标识符是否被声明为类型\n\n#### VB\n\nVB基本上是1型。`<`可能是小于号，也可能是XML直接量的开始，取决于当前位置是否可以接受XML直接量。\n\n### Python\n\n行首的Tab符和空格会根据上一行的行首空白以一定规则被处处理成虚拟终结符indent或者dedent\n\n### 其他语言\n\nLisp, C, PHP, JAVA, SQL\n\n## reference\n\n[怎样设计一套程序设计语言？](https://www.zhihu.com/question/19756886)\n[编译原理（哈工大）—— bilibili](https://www.bilibili.com/video/BV1zW411t7YE?from=search&seid=1590568849937040326)","slug":"program_language","published":1,"updated":"2020-04-24T08:50:13.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9dyq9uq000530r53hojavcc","content":"<h2 id=\"如何让计算机理解代码\"><a href=\"#如何让计算机理解代码\" class=\"headerlink\" title=\"如何让计算机理解代码\"></a>如何让计算机理解代码</h2><blockquote>\n<p>从最基本的角度看，一种编程语言就是：把一组特定的<strong>词汇</strong>，按照一组特定的<strong>语法</strong>规则组合到一起，形成计算机可以通过某种方式“<strong>理解</strong>”的东西，可以让计算机据此执行特定的<strong>动作</strong>。</p>\n</blockquote>\n<p>这不是一个很容易解释的话题。相比人类，计算机是一个没有感情的机器。没有感情有好也有坏。好处就是你定义好规则，它就会按照你的规则办事。如何制定这个规则，也就是如何设计一门语言。人类有English，中文，日本人，Espanol，عربي， 한국어…。每个语言都有自己的表达规则，计算机语言也不例外。那么如何从无到有设计一套语言呢？在开始设计之前，我们先来理解几个基础词汇。</p>\n<ul>\n<li>文法 （Grammar）</li>\n<li>语法  (Syntax)</li>\n<li>词法 （Lexical）<a id=\"more\"></a>\n以人工英汉翻译为例<br><img src=\"translate.png\" alt=\"\"></li>\n</ul>\n<p>首先是解析的过程： </p>\n<p>当拿到一个句子，我们首先理解了每一个词（词组）的意思（词法分析），然后理解词组组合后的短语（语法分析）。最后将短语组合翻译，变成一个句子的语义（语义分析）。这个语义是中间表示，独立于具体的语言。拿到语义之后你就可以生成目标语言。人类翻译的目标语言可以是“中文”，“韩文”，“法文”等等。具体是哪个形式，由接受人决定，你翻译给谁听，就译成ta理解的形式。而对计算机而言，目标语言就是机器语言。</p>\n<p><img src=\"machine_language.png\" alt=\"\"></p>\n<p>知道了这个过程之后，我们就可以继续思考一下，如何取制定一套语言的文法规则。</p>\n<h2 id=\"如何设计一套计算机语言\"><a href=\"#如何设计一套计算机语言\" class=\"headerlink\" title=\"如何设计一套计算机语言\"></a>如何设计一套计算机语言</h2><p>根据我们上面的分析，要想让计算机“读”懂我们的代码，就要有一套固定的语义，语法和词法体系。那么现在我们常用的语言是按照什么规则制定的呢？</p>\n<h3 id=\"语法部分\"><a href=\"#语法部分\" class=\"headerlink\" title=\"语法部分\"></a>语法部分</h3><h4 id=\"非形式语法\"><a href=\"#非形式语法\" class=\"headerlink\" title=\"非形式语法\"></a>非形式语法</h4><ul>\n<li>中文 英文</li>\n</ul>\n<h4 id=\"形式语法（乔姆斯基谱系）\"><a href=\"#形式语法（乔姆斯基谱系）\" class=\"headerlink\" title=\"形式语法（乔姆斯基谱系）\"></a>形式语法（乔姆斯基谱系）</h4><ul>\n<li>O型  无限制文法<ul>\n<li><code>?::=?</code></li>\n</ul>\n</li>\n<li>1型  上下文相关文法<ul>\n<li><code>?&lt;A&gt;?::=?&lt;B&gt;</code></li>\n</ul>\n</li>\n<li>2型  上下文无关文法<ul>\n<li><code>&lt;A&gt;::=?</code></li>\n</ul>\n</li>\n<li>3型  正则文法<ul>\n<li><code>&lt;A&gt;::=&lt;A&gt;？</code></li>\n</ul>\n</li>\n</ul>\n<p>其中 <strong>上下文无关语言</strong>为大多数<strong>程序设计语言</strong>的语法提供了理论基础。</p>\n<p>在这个理论基础上，有了一些具体的实践。 以BNF为例，BNF是比较常见的一种形式。</p>\n<h3 id=\"产生式-巴科斯诺尔范式-Backus-Normal-Form-——-BNF\"><a href=\"#产生式-巴科斯诺尔范式-Backus-Normal-Form-——-BNF\" class=\"headerlink\" title=\"产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)\"></a>产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)</h3><ul>\n<li>用尖括号括起来的名称来表示语法结构名</li>\n<li>语法结构分成基础结构和需要用其他语法结构定义的复合结构<ul>\n<li>基础结构称终结符</li>\n<li>复合结构称非终结符</li>\n</ul>\n</li>\n<li>引号和中间的字符表示终结符</li>\n<li>可以有括号</li>\n<li><code>*</code> 表示重复多次</li>\n<li><code>|</code> 表示或</li>\n<li><code>+</code> 表示至少一次</li>\n</ul>\n<p>一个四则运算的BNF凡是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Number&gt; ::= <span class=\"string\">\"0\"</span> | <span class=\"string\">\"1\"</span> | <span class=\"string\">\"2\"</span> | <span class=\"string\">\"3\"</span> | <span class=\"string\">\"4\"</span> | ... | <span class=\"string\">\"9\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;DecimalNumber&gt; ::= <span class=\"string\">\"0\"</span> | ((<span class=\"string\">\"1\"</span> | <span class=\"string\">\"2\"</span> | <span class=\"string\">\"3\"</span> | <span class=\"string\">\"4\"</span> | ... | <span class=\"string\">\"9\"</span>)&lt;Number&gt;*)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;PrimaryExpression&gt; ::= &lt;DecimalNumber&gt; | <span class=\"string\">\"(\"</span> &lt;LogicalExpression&gt; <span class=\"string\">\")\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Multiplicative&gt; ::= &lt;PrimaryExpression&gt; |</span><br><span class=\"line\">                   &lt;Multiplicative&gt; <span class=\"string\">\"*\"</span> &lt;PrimaryExpression&gt; |</span><br><span class=\"line\">                   &lt;Multiplicative&gt; <span class=\"string\">\"/\"</span> &lt;PrimaryExpression&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;AddtiveExpression&gt; ::= &lt;Multiplicative&gt; |</span><br><span class=\"line\">                      &lt;AddtiveExpression&gt; <span class=\"string\">\"+\"</span> &lt;Multiplicative&gt; |</span><br><span class=\"line\">                      &lt;AddtiveExpression&gt; <span class=\"string\">\"-\"</span> &lt;Multiplicative&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;logicalExpression&gt; ::= &lt;AddtiveExpression&gt; |</span><br><span class=\"line\">                      &lt;logicalExpression&gt; <span class=\"string\">\"||\"</span> &lt;AddtiveExpression&gt; |</span><br><span class=\"line\">                      &lt;logicalExpression&gt; <span class=\"string\">\"&amp;&amp;\"</span> &lt;AddtiveExpression&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常见的语言分析\"><a href=\"#常见的语言分析\" class=\"headerlink\" title=\"常见的语言分析\"></a>常见的语言分析</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>JavaScript语法多是上下文无关文法为主。但是也有特殊的情况，比如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span> a &#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;,  <span class=\"comment\">//在这里get是一个关键字</span></span><br><span class=\"line\">    <span class=\"keyword\">get</span>: 1             //而在这里就是一个变量名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>表达式部分多在3型，正则文法。但也有特殊的情况，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">1</span>**<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>Javascript中，<code>/</code>可能是除号，也可能是正则表达式开头，处理方式类似VB，字符串模板中也需要特殊处理，还有自动插入分号规则。</p>\n<h4 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h4><p>C++是非形式化语言，C++中，<code>*</code>坑你表示乘号或者指针，具体是哪个，取决于星号前面的标识符是否被声明为类型</p>\n<h4 id=\"VB\"><a href=\"#VB\" class=\"headerlink\" title=\"VB\"></a>VB</h4><p>VB基本上是1型。<code>&lt;</code>可能是小于号，也可能是XML直接量的开始，取决于当前位置是否可以接受XML直接量。</p>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p>行首的Tab符和空格会根据上一行的行首空白以一定规则被处处理成虚拟终结符indent或者dedent</p>\n<h3 id=\"其他语言\"><a href=\"#其他语言\" class=\"headerlink\" title=\"其他语言\"></a>其他语言</h3><p>Lisp, C, PHP, JAVA, SQL</p>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><p><a href=\"https://www.zhihu.com/question/19756886\" target=\"_blank\" rel=\"noopener\">怎样设计一套程序设计语言？</a><br><a href=\"https://www.bilibili.com/video/BV1zW411t7YE?from=search&seid=1590568849937040326\" target=\"_blank\" rel=\"noopener\">编译原理（哈工大）—— bilibili</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"如何让计算机理解代码\"><a href=\"#如何让计算机理解代码\" class=\"headerlink\" title=\"如何让计算机理解代码\"></a>如何让计算机理解代码</h2><blockquote>\n<p>从最基本的角度看，一种编程语言就是：把一组特定的<strong>词汇</strong>，按照一组特定的<strong>语法</strong>规则组合到一起，形成计算机可以通过某种方式“<strong>理解</strong>”的东西，可以让计算机据此执行特定的<strong>动作</strong>。</p>\n</blockquote>\n<p>这不是一个很容易解释的话题。相比人类，计算机是一个没有感情的机器。没有感情有好也有坏。好处就是你定义好规则，它就会按照你的规则办事。如何制定这个规则，也就是如何设计一门语言。人类有English，中文，日本人，Espanol，عربي， 한국어…。每个语言都有自己的表达规则，计算机语言也不例外。那么如何从无到有设计一套语言呢？在开始设计之前，我们先来理解几个基础词汇。</p>\n<ul>\n<li>文法 （Grammar）</li>\n<li>语法  (Syntax)</li>\n<li>词法 （Lexical）","more":"以人工英汉翻译为例<br><img src=\"translate.png\" alt=\"\"></li>\n</ul>\n<p>首先是解析的过程： </p>\n<p>当拿到一个句子，我们首先理解了每一个词（词组）的意思（词法分析），然后理解词组组合后的短语（语法分析）。最后将短语组合翻译，变成一个句子的语义（语义分析）。这个语义是中间表示，独立于具体的语言。拿到语义之后你就可以生成目标语言。人类翻译的目标语言可以是“中文”，“韩文”，“法文”等等。具体是哪个形式，由接受人决定，你翻译给谁听，就译成ta理解的形式。而对计算机而言，目标语言就是机器语言。</p>\n<p><img src=\"machine_language.png\" alt=\"\"></p>\n<p>知道了这个过程之后，我们就可以继续思考一下，如何取制定一套语言的文法规则。</p>\n<h2 id=\"如何设计一套计算机语言\"><a href=\"#如何设计一套计算机语言\" class=\"headerlink\" title=\"如何设计一套计算机语言\"></a>如何设计一套计算机语言</h2><p>根据我们上面的分析，要想让计算机“读”懂我们的代码，就要有一套固定的语义，语法和词法体系。那么现在我们常用的语言是按照什么规则制定的呢？</p>\n<h3 id=\"语法部分\"><a href=\"#语法部分\" class=\"headerlink\" title=\"语法部分\"></a>语法部分</h3><h4 id=\"非形式语法\"><a href=\"#非形式语法\" class=\"headerlink\" title=\"非形式语法\"></a>非形式语法</h4><ul>\n<li>中文 英文</li>\n</ul>\n<h4 id=\"形式语法（乔姆斯基谱系）\"><a href=\"#形式语法（乔姆斯基谱系）\" class=\"headerlink\" title=\"形式语法（乔姆斯基谱系）\"></a>形式语法（乔姆斯基谱系）</h4><ul>\n<li>O型  无限制文法<ul>\n<li><code>?::=?</code></li>\n</ul>\n</li>\n<li>1型  上下文相关文法<ul>\n<li><code>?&lt;A&gt;?::=?&lt;B&gt;</code></li>\n</ul>\n</li>\n<li>2型  上下文无关文法<ul>\n<li><code>&lt;A&gt;::=?</code></li>\n</ul>\n</li>\n<li>3型  正则文法<ul>\n<li><code>&lt;A&gt;::=&lt;A&gt;？</code></li>\n</ul>\n</li>\n</ul>\n<p>其中 <strong>上下文无关语言</strong>为大多数<strong>程序设计语言</strong>的语法提供了理论基础。</p>\n<p>在这个理论基础上，有了一些具体的实践。 以BNF为例，BNF是比较常见的一种形式。</p>\n<h3 id=\"产生式-巴科斯诺尔范式-Backus-Normal-Form-——-BNF\"><a href=\"#产生式-巴科斯诺尔范式-Backus-Normal-Form-——-BNF\" class=\"headerlink\" title=\"产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)\"></a>产生式 巴科斯诺尔范式 (Backus Normal Form —— BNF)</h3><ul>\n<li>用尖括号括起来的名称来表示语法结构名</li>\n<li>语法结构分成基础结构和需要用其他语法结构定义的复合结构<ul>\n<li>基础结构称终结符</li>\n<li>复合结构称非终结符</li>\n</ul>\n</li>\n<li>引号和中间的字符表示终结符</li>\n<li>可以有括号</li>\n<li><code>*</code> 表示重复多次</li>\n<li><code>|</code> 表示或</li>\n<li><code>+</code> 表示至少一次</li>\n</ul>\n<p>一个四则运算的BNF凡是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Number&gt; ::= <span class=\"string\">\"0\"</span> | <span class=\"string\">\"1\"</span> | <span class=\"string\">\"2\"</span> | <span class=\"string\">\"3\"</span> | <span class=\"string\">\"4\"</span> | ... | <span class=\"string\">\"9\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;DecimalNumber&gt; ::= <span class=\"string\">\"0\"</span> | ((<span class=\"string\">\"1\"</span> | <span class=\"string\">\"2\"</span> | <span class=\"string\">\"3\"</span> | <span class=\"string\">\"4\"</span> | ... | <span class=\"string\">\"9\"</span>)&lt;Number&gt;*)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;PrimaryExpression&gt; ::= &lt;DecimalNumber&gt; | <span class=\"string\">\"(\"</span> &lt;LogicalExpression&gt; <span class=\"string\">\")\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;Multiplicative&gt; ::= &lt;PrimaryExpression&gt; |</span><br><span class=\"line\">                   &lt;Multiplicative&gt; <span class=\"string\">\"*\"</span> &lt;PrimaryExpression&gt; |</span><br><span class=\"line\">                   &lt;Multiplicative&gt; <span class=\"string\">\"/\"</span> &lt;PrimaryExpression&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;AddtiveExpression&gt; ::= &lt;Multiplicative&gt; |</span><br><span class=\"line\">                      &lt;AddtiveExpression&gt; <span class=\"string\">\"+\"</span> &lt;Multiplicative&gt; |</span><br><span class=\"line\">                      &lt;AddtiveExpression&gt; <span class=\"string\">\"-\"</span> &lt;Multiplicative&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;logicalExpression&gt; ::= &lt;AddtiveExpression&gt; |</span><br><span class=\"line\">                      &lt;logicalExpression&gt; <span class=\"string\">\"||\"</span> &lt;AddtiveExpression&gt; |</span><br><span class=\"line\">                      &lt;logicalExpression&gt; <span class=\"string\">\"&amp;&amp;\"</span> &lt;AddtiveExpression&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常见的语言分析\"><a href=\"#常见的语言分析\" class=\"headerlink\" title=\"常见的语言分析\"></a>常见的语言分析</h3><h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><p>JavaScript语法多是上下文无关文法为主。但是也有特殊的情况，比如:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span> a &#123;<span class=\"keyword\">return</span> <span class=\"number\">1</span>&#125;,  <span class=\"comment\">//在这里get是一个关键字</span></span><br><span class=\"line\">    <span class=\"keyword\">get</span>: 1             //而在这里就是一个变量名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>表达式部分多在3型，正则文法。但也有特殊的情况，</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span>**<span class=\"number\">1</span>**<span class=\"number\">2</span></span><br></pre></td></tr></table></figure>\n\n<p>Javascript中，<code>/</code>可能是除号，也可能是正则表达式开头，处理方式类似VB，字符串模板中也需要特殊处理，还有自动插入分号规则。</p>\n<h4 id=\"C\"><a href=\"#C\" class=\"headerlink\" title=\"C++\"></a>C++</h4><p>C++是非形式化语言，C++中，<code>*</code>坑你表示乘号或者指针，具体是哪个，取决于星号前面的标识符是否被声明为类型</p>\n<h4 id=\"VB\"><a href=\"#VB\" class=\"headerlink\" title=\"VB\"></a>VB</h4><p>VB基本上是1型。<code>&lt;</code>可能是小于号，也可能是XML直接量的开始，取决于当前位置是否可以接受XML直接量。</p>\n<h3 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h3><p>行首的Tab符和空格会根据上一行的行首空白以一定规则被处处理成虚拟终结符indent或者dedent</p>\n<h3 id=\"其他语言\"><a href=\"#其他语言\" class=\"headerlink\" title=\"其他语言\"></a>其他语言</h3><p>Lisp, C, PHP, JAVA, SQL</p>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><p><a href=\"https://www.zhihu.com/question/19756886\" target=\"_blank\" rel=\"noopener\">怎样设计一套程序设计语言？</a><br><a href=\"https://www.bilibili.com/video/BV1zW411t7YE?from=search&seid=1590568849937040326\" target=\"_blank\" rel=\"noopener\">编译原理（哈工大）—— bilibili</a></p>"}],"PostAsset":[{"_id":"source/_posts/2020-04-16-bit/deal.jpeg","slug":"deal.jpeg","post":"ck9dyq9uk000430r5b7hs85cv","modified":0,"renderable":0},{"_id":"source/_posts/program_language/translate.png","slug":"translate.png","post":"ck9dyq9uq000530r53hojavcc","modified":0,"renderable":0},{"_id":"source/_posts/2020-04-16-bit/bbjy.png","slug":"bbjy.png","post":"ck9dyq9uk000430r5b7hs85cv","modified":0,"renderable":0},{"_id":"source/_posts/program_language/machine_language.png","slug":"machine_language.png","post":"ck9dyq9uq000530r53hojavcc","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ck9dyq9uq000530r53hojavcc","category_id":"ck9dyq9ui000230r52ptge9kk","_id":"ck9dyq9ut000a30r5fnriesjk"},{"post_id":"ck9dyq9u9000030r5c57p2hwy","category_id":"ck9dyq9ui000230r52ptge9kk","_id":"ck9dyq9ut000c30r5amv0496l"},{"post_id":"ck9dyq9ug000130r567gshcn2","category_id":"ck9dyq9ur000630r5ebrl46rl","_id":"ck9dyq9uu000e30r5g2rc5v84"}],"PostTag":[{"post_id":"ck9dyq9uq000530r53hojavcc","tag_id":"ck9dyq9uj000330r55gb5g4c3","_id":"ck9dyq9us000830r51ouehehh"},{"post_id":"ck9dyq9u9000030r5c57p2hwy","tag_id":"ck9dyq9uj000330r55gb5g4c3","_id":"ck9dyq9ut000930r5by4w261z"},{"post_id":"ck9dyq9ug000130r567gshcn2","tag_id":"ck9dyq9us000730r51viocp1g","_id":"ck9dyq9ut000d30r5egcu8gji"},{"post_id":"ck9dyq9uk000430r5b7hs85cv","tag_id":"ck9dyq9ut000b30r5anj04x96","_id":"ck9dyq9uv000h30r58zt797vh"},{"post_id":"ck9dyq9uk000430r5b7hs85cv","tag_id":"ck9dyq9uu000f30r519z035wp","_id":"ck9dyq9uv000i30r56jjvccg6"},{"post_id":"ck9dyq9uk000430r5b7hs85cv","tag_id":"ck9dyq9uu000g30r5h1e8drnm","_id":"ck9dyq9uv000j30r597hedx19"}],"Tag":[{"name":"计算机通识","_id":"ck9dyq9uj000330r55gb5g4c3"},{"name":"hexo","_id":"ck9dyq9us000730r51viocp1g"},{"name":"理财","_id":"ck9dyq9ut000b30r5anj04x96"},{"name":"比特币","_id":"ck9dyq9uu000f30r519z035wp"},{"name":"火币","_id":"ck9dyq9uu000g30r5h1e8drnm"}]}}